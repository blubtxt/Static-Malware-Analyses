#!/usr/bin/env python
import sys, getopt, hashlib, subprocess, simplejson, urllib, urllib2, os, pefile, peutils

from create_html import createFile,closeFile,insertSeperator

#Change here your VirusTotal API Key *Public API limited to 4 requests per minute*
vtapikey = ''

#VirusTotal URL 
vturl = "https://www.virustotal.com/vtapi/v2/file/report"

def calcChecksum(f):
    
    md5 = hashlib.md5()
    sha1 = hashlib.sha1()
    sha256 = hashlib.sha256()
    sha512 = hashlib.sha512()
    while True:
        data = f.read(128)
        if not data:
            break
        md5.update(data)
        sha1.update(data)
        sha256.update(data)
        sha512.update(data)
    return md5.hexdigest(),sha1.hexdigest(),sha256.hexdigest(),sha512.hexdigest()
    
def queryVT(md5):
    
    parameters = {"resource": md5, "apikey": vtapikey}
    data = urllib.urlencode(parameters)
    req = urllib2.Request(vturl, data)
    response = urllib2.urlopen(req)
    json = response.read()
    return simplejson.loads(json)

def startAnalyses():
    
	version()
        
        try:
            opts, args = getopt.getopt(sys.argv[1:],"hf:",["help","file="])
       
        except getopt.GetoptError:
            help()
            sys.exit(2)
        
        for opt, arg in opts:
            
            if opt in ("-h", "--help"):
                help()
                sys.exit()
                
            elif opt in ("-f", "--file"):
                filePath = arg
                
                f = open(filePath)
                
                html = createFile(filePath)
                
                #get the filetype by calling the external program file
                filetype = subprocess.check_output(["file", "-b", filePath])
                
                html.write("File Size: %s<br>File Type: %s<br>"%(os.path.getsize(filePath),filetype)) 
                
                insertSeperator(html)
                
                #calculate some Checksums
                md5,sha1,sha256,sha512 = calcChecksum(f)
                html.write("<br><b><a id='checksums'>File Checksums:</a></b><br>MD5:    %s<br>SHA1:   %s<br>SHA256: %s<br>SHA512: %s<br>" %(md5,sha1,sha256,sha512))
                
                insertSeperator(html)
                
                #request Results from Virustotal 
                response_dict = queryVT(md5)
                
                html.write("<br><b><a id='virus'>VirusTotal Results:</a></b><br>%s / %s<br>" % ( response_dict.get("positives"),response_dict.get("total") )) 
                
                insertSeperator(html)
                
                pe =  pefile.PE(filePath)
                
                html.write("<br><b><a id='sections'>Sections:</a></b><br>")
                html.write("Entrypoint: %s<br>Number of Sections: %i<br><br>"%(hex(pe.OPTIONAL_HEADER.AddressOfEntryPoint),len(pe.sections)))
                for section in pe.sections:
                    html.write( "%s %s %s %s<br>"%(section.Name, hex(section.VirtualAddress),hex(section.Misc_VirtualSize), section.SizeOfRawData))
                    
                insertSeperator(html)
                    
                pe.parse_data_directories()
                
                html.write("<br><b><a id='imports'>Imports:</a></b><br>")
                for entry in pe.DIRECTORY_ENTRY_IMPORT:
                    html.write("%s<br>"%entry.dll) 
                    for imp in entry.imports:
                        html.write("%s %s<br>"%(hex(imp.address), imp.name)) 
                
                insertSeperator(html)
                
                #get printable strings in the binary file by calling the external program strings
                strings = subprocess.check_output(["strings", filePath])
                
                html.write("<br><b><a id='strings'>Strings:</a></b><br>") 
                html.write("<br>".join(strings.split())) 
                

def version():
    
    sys.stdout.write("\nStatic Malware Analyses Script 0.2\n")
    sys.stdout.write("Python script for Static Analyses of Malware\n")
    sys.stdout.write("Author: Johannes Schroeter - www.devwerks.net\n\n")
    
def help():
    
    sys.stdout.write("malware-analyses.py -f/--file FILEPATH\n")
    sys.stdout.write("Example: malware-analyses.py -f test.exe\n")

def main():
    
    startAnalyses()
    sys.exit()

if __name__ == "__main__":
        main()

